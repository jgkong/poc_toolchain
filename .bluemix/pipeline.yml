stages:
- name: Build Stage
  inputs:
  - type: git
    branch: master
    service: ${REPO}
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: maven
    script: |-
      #!/bin/bash
      mvn -B package
- name: Test Stage
  inputs:
  - type: job
    stage: Build Stage
    job: Build
    dir_name: null
  jobs:
  - name: Test
    type: tester
    script: |-
      #!/bin/bash
      mvn test
    enable_tests: true
    test_file_pattern: target/surefire-reports/TEST-*.xml
- name: Deploy Stage
  inputs:
  - type: job
    stage: Build Stage
    job: Build
    dir_name: null
  properties:
  - name: SERVERS
    value: 10.0.0.1
    type: text_area
  - name: SSH_KEY
    value: KEY
    type: text_area
  - name: REMOTE_COMMAND
    value: |-
      /opt/cops/apache-tomcat-8.5.5/bin/shutdown.sh
      rm -rf /opt/cops/apache-tomcat-8.5.5/webapps/sample-project
      mv /tmp/sample-project.war /opt/cops/apache-tomcat-8.5.5/webapps/
      mv -f /tmp/sample-project.war /opt/cops/apache-tomcat-8.5.5/webapps/
      /opt/cops/apache-tomcat-8.5.5/bin/startup.sh
    type: text_area
  - name: CONSUL_HOST
    value: 169.44.13.129
    type: text
  - name: CONSUL_TARGET
    value: sample.service.dc1.consul
    type: text
  - name: CONSUL_PORT
    value: '8600'
    type: text
  - name: CONSUL_SERVICE
    value: sample
    type: text
  - name: CONSUL_API
    value: http://169.44.13.129:8500/v1
    type: text
  jobs:
  - name: Deploy
    type: deployer
    target:
      region_id: ${CF_REGION_ID}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}

    script: |
      #!/bin/bash
      SSH_KEY_FILE="$(mktemp)"
      SSH_OPTIONS="-o PreferredAuthentications=publickey -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i $SSH_KEY_FILE"
      SSH_USER="root"

      #echo "$SSH_KEY" > "$SSH_KEY_FILE"
      curl $CONSUL_API/kv/${CONSUL_SERVICE}_key |grep Value |cut -d '"' -f 4 |base64 --decode > "$SSH_KEY_FILE"
      cat $SSH_KEY_FILE
      #SERVERS=$(dig $CONSUL_HOST -p $CONSUL_PORT $CONSUL_TARGET +short)
      #SERVERS=$(nslookup $CONSUL_TARGET $CONSUL_HOST -port=$CONSUL_PORT |tail -n +4 |grep Address |cut -d " " -f 2)
      cat > get_target.py << __EOF__
      import json
      import urllib2

      URL = "$CONSUL_CATALOG/catalog/service/$CONSUL_SERVICE"

      res = urllib2.urlopen(URL)
      data = json.load(res)
      print ' '.join(map(lambda x: x['Address'], data))
      __EOF__
      SERVERS=$(python get_target.py)

      echo "Deploying to: ${SERVERS}"

      for SERVER in ${SERVERS};
      do
          echo "server: $SERVER"
          scp $SSH_OPTIONS ./target/sample-project.war $SSH_USER@$SERVER:/tmp/
          echo "eval $REMOTE_COMMAND" | ssh $SSH_OPTIONS $SSH_USER@$SERVER 2>/dev/null
          echo $?
      done

      rm "$SSH_KEY_FILE"
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: https://devops-api.ng.bluemix.net/v1/messaging/webhook/publish
